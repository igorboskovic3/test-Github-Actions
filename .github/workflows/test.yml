name: Test bed

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Echo some SHAs
        run: |
            echo "GITHUB_REF=$GITHUB_REF GITHUB_BASE_REF=$GITHUB_BASE_REF GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
            echo "GITHUB_EVENT_PATH=$GITHUB_EVENT_PATH"
            echo "GITHUB_SHA=$GITHUB_SHA"
            echo "github.sha = ${{ github.sha }}"
            echo "github.event.repository.commits_url = ${{ github.event.repository.commits_url }}"
            echo "github.event.after = ${{ github.event.after }}"

            test="${{ contains(toJSON(github.event.commits.*.message), '[skip-ci]') }}"
            echo "test=$test"

      - name: Bash Version
        run: |
            bash --version
            commits_url="${{ github.event.repository.commits_url }}"
            commit_sha="${{ github.event.after }}"
            url="${commits_url/\{\/sha\}/\/$commit_sha}"
            data=$(curl $url)
            echo "$data"
            last_commit_msg=$(echo $data | jq -r .commit.message)
            echo "last_commit_msg=$last_commit_msg"
            ([[ ${last_commit_msg,,} =~ skip[\-_[:space:]]ci ]] || [[ ${last_commit_msg,,} =~ ci[\-_[:space:]]skip ]]) && SKIP_CI=True || SKIP_CI=False
            echo "SKIP_CI=$SKIP_CI"

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT" | tee github.json
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT" | tee job.json
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT" | tee steps.json
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT" | tee runner.json
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT" | tee strategy.json
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT" | tee matrix.json

      - name: echo toJSON
        env:
            JSON_VALUE: ${{ toJSON(github.event.commits.*.message) }}
        run: echo $JSON_VALUE

      - name: No Skip CI
        if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
        run: echo "No skip-ci entered"

      - name: Skip CI was entered
        if: "contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
        run: echo "skip-ci entered"

      - name: install requests
        shell: bash
        run: pip install requests

      - name: Python Skip CI via Github API
        shell: python
        run: |
            import sys
            print(sys.version)
            import re
            import subprocess
            import json
            import requests

            commits_url = "${{ github.event.repository.commits_url }}"
            print("commits_url={}".format(commits_url))

            commit_sha = "${{ github.event.after }}"
            print("commit_sha={}".format(commit_sha))
            url = commits_url.replace('{/sha}', '/{}'.format(commit_sha))

            r = requests.get(url)
            if not r.ok:
                print("Something went wrong when querying {}, status={}".format(url, r.status_code))
                exit(0)
            data = r.json()
            last_commit_msg = data['commit']['message']

            print("last_commit_msg={}".format(last_commit_msg))
            skip_ci = re.compile(r'((?:\[skip[ _-]ci\])|(?:\[ci[ _-]skip\]))', re.IGNORECASE)
            m = skip_ci.search(last_commit_msg)
            if m:
                print("Skipping CI since the commit message has '{}'".format(m.groups()[0]))
                exit(0)
            else:
                print('Not skipping CI')
                exit(0)


      - name: Bash Skip CI?
        shell: bash
        run: |
          git log -2 --pretty=format:%s
          last_commit_msg=$(git log -1 --pretty=format:%s)
          echo "last commit message: $last_commit_msg"

          echo "try match_count1"
          match_count1=$(echo $last_commit_msg | grep -ci "\[skip[ _-]ci\]")
          echo "try match_count2"
          match_count2=$(echo $last_commit_msg | grep -ci "\[ci[ _-]skip\]")
          echo "try match_count"
          match_count=$((match_count1 + match_count2))
          echo "There are $match_count of the skip-ci or ci-skip variants"
          if [[ "$match_count" -eq 0 ]]; then
            echo "You should not skip CI"
          else
            echo "Skip CI"
          fi

      - name: upload github context JSON github.json
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
            name: github contexts
            path: ./*.json
